---
version: 2
before:
  hooks:
    - go mod tidy -compat=1.22
    - go mod vendor

release:
  prerelease: auto

builds:
  - id: headscale
    main: ./cmd/headscale
    #mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=0
    targets:
      - darwin_amd64
      - darwin_arm64
      #- freebsd_amd64
      #- linux_386
      - linux_amd64
      - linux_arm64
      - windows_amd64
      #- linux_arm_5
      #- linux_arm_6
      #- linux_arm_7
    flags:
      - -mod=readonly
    ldflags:
      - -s -w
      - -X github.com/avkiller/headscale/hscontrol/types.Version={{ .Version }}
      - -X github.com/avkiller/headscale/hscontrol/types.GitCommitHash={{ .Commit }}
    tags:
      - ts2019

archives:
  - id: golang-cross
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
  - formats: [ 'binary' ]  

source:
  enabled: true
  name_template: "{{ .ProjectName }}_{{ .Version }}"
  format: tar.gz
  files:
    - "vendor/"

nfpms:
  # Configure nFPM for .deb and .rpm releases
  #
  # See https://nfpm.goreleaser.com/configuration/
  # and https://goreleaser.com/customization/nfpm/
  #
  # Useful tools for debugging .debs:
  # List file contents: dpkg -c dist/headscale...deb
  # Package metadata: dpkg --info dist/headscale....deb
  #
  - builds:
      - headscale
    package_name: headscale
    priority: optional
    vendor: headscale
    maintainer: Kristoffer Dalby <kristoffer@dalby.cc>
    homepage: https://github.com/juanfont/headscale
    license: BSD
    bindir: /usr/bin
    formats:
      - deb
    contents:
      - src: ./config-example.yaml
        dst: /etc/headscale/config.yaml
        type: config|noreplace
        file_info:
          mode: 0644
      - src: ./docs/packaging/headscale.systemd.service
        dst: /usr/lib/systemd/system/headscale.service
      - dst: /var/lib/headscale
        type: dir
      - dst: /var/run/headscale
        type: dir
    scripts:
      postinstall: ./docs/packaging/postinstall.sh
      postremove: ./docs/packaging/postremove.sh

checksum:
  name_template: "checksums.txt"
changelog:
  disable: true
snapshot:
  version_template: "{{ .Tag }}-next"
nightly:
  # Allows you to change the version of the generated nightly release.
  #
  # Note that some pipes require this to be semantic version compliant (nfpm,
  # for example).
  #
  # Default: `{{ incpatch .Version }}-{{ .ShortCommit }}-nightly`.
  # Templates: allowed.
  version_template: "{{ .Tag }}-devel"

  # Tag name to create if publish_release is enabled.
  tag_name: devel

  # Whether to publish a release or not.
  # Only works on GitHub.
  publish_release: true

  # Whether to delete previous pre-releases for the same `tag_name` when
  # releasing.
  # This allows you to keep a single pre-release.
  keep_single_release: true
